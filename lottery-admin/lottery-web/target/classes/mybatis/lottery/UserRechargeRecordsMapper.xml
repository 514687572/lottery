<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.lottery.dao.UserRechargeRecordsDao">

	<select id="get" resultType="com.bootdo.lottery.domain.UserRechargeRecordsDO">
		select `inOrderId`,`uid`,`eos_price`,`recharge_num`,`recharge_type`,`recharge_status`,`num`,`time` from t_user_recharge_records where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.lottery.domain.UserRechargeRecordsDO">
		select records.`inOrderId`,records.`uid`,records.`eos_price`,records.`num`,records.`recharge_type`,records.`recharge_status`,
		records.`num`,records.`time`,luser.`user_name` from t_user_recharge_records records
		LEFT JOIN  t_lottery_user luser ON luser.user_id = records.uid
        <where>  
		  		  <if test="inOrderId != null and inOrderId != ''"> and inOrderId = #{inOrderId} </if>
		  		  <if test="uid != null and uid != ''"> and uid = #{uid} </if>
		  		  <if test="eosPrice != null and eosPrice != ''"> and eos_price = #{eosPrice} </if>
		  		  <if test="rechargeNum != null and rechargeNum != ''"> and recharge_num = #{rechargeNum} </if>
		  		  <if test="rechargeType != null and rechargeType != ''"> and recharge_type = #{rechargeType} </if>
		  		  <if test="rechargeStatus != null and rechargeStatus != ''"> and recharge_status = #{rechargeStatus} </if>
		  		  <if test="num != null and num != ''"> and num = #{num} </if>
		  		  <if test="time != null and time != ''"> and time = #{time} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by inOrderId desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from t_user_recharge_records
		 <where>  
		  		  <if test="inOrderId != null and inOrderId != ''"> and inOrderId = #{inOrderId} </if>
		  		  <if test="uid != null and uid != ''"> and uid = #{uid} </if>
		  		  <if test="eosPrice != null and eosPrice != ''"> and eos_price = #{eosPrice} </if>
		  		  <if test="rechargeNum != null and rechargeNum != ''"> and recharge_num = #{rechargeNum} </if>
		  		  <if test="rechargeType != null and rechargeType != ''"> and recharge_type = #{rechargeType} </if>
		  		  <if test="rechargeStatus != null and rechargeStatus != ''"> and recharge_status = #{rechargeStatus} </if>
		  		  <if test="num != null and num != ''"> and num = #{num} </if>
		  		  <if test="time != null and time != ''"> and time = #{time} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.lottery.domain.UserRechargeRecordsDO" useGeneratedKeys="true" keyProperty="id">
		insert into t_user_recharge_records
		(
			`inOrderId`, 
			`uid`, 
			`eos_price`, 
			`recharge_num`, 
			`recharge_type`, 
			`recharge_status`, 
			`num`, 
			`time`
		)
		values
		(
			#{inOrderId}, 
			#{uid}, 
			#{eosPrice}, 
			#{rechargeNum}, 
			#{rechargeType}, 
			#{rechargeStatus}, 
			#{num}, 
			#{time}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.lottery.domain.UserRechargeRecordsDO">
		update t_user_recharge_records 
		<set>
			<if test="uid != null">`uid` = #{uid}, </if>
			<if test="eosPrice != null">`eos_price` = #{eosPrice}, </if>
			<if test="rechargeNum != null">`recharge_num` = #{rechargeNum}, </if>
			<if test="rechargeType != null">`recharge_type` = #{rechargeType}, </if>
			<if test="rechargeStatus != null">`recharge_status` = #{rechargeStatus}, </if>
			<if test="num != null">`num` = #{num}, </if>
			<if test="time != null">`time` = #{time}</if>
		</set>
		where inOrderId = #{inOrderId}
	</update>
	
	<delete id="remove">
		delete from t_user_recharge_records where inOrderId = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from t_user_recharge_records where inOrderId in 
		<foreach item="inOrderId" collection="array" open="(" separator="," close=")">
			#{inOrderId}
		</foreach>
	</delete>

</mapper>